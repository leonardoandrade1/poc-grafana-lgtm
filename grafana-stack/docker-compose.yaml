networks:
  grafana:

volumes:
  tempo_backup:
  prometheus_backup:
  loki_backup:

services:
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    volumes:
      - ./config/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_BASIC_ENABLED=false
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - 3000:3000
    depends_on:
      - collector
    networks:
      - grafana

  collector:
    image: otel/opentelemetry-collector-contrib
    container_name: collector
    command: ["--config=/etc/collector.yaml"]
    ports:
      - 8888:8888 # Collector health metrics
      - 8889:8889 # Application metrics
      - 4317:4317 # GRPC receiver
      - 4318:4318 # HTTP receiver
    volumes:
      - ./config/opentelemetry/otel-collector-config.yaml:/etc/collector.yaml
    depends_on:
      - tempo
    networks:
      - grafana

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./config/prometheus/prometheus.yaml:/etc/prometheus.yaml
      - prometheus_backup:/prometheus
    networks:
      - grafana

  tempo_init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - tempo_backup:/var/tempo

  tempo:
    image: *tempoImage
    container_name: tempo
    command:
      [
        "--config.file=/etc/tempo.yaml",
        "--storage.trace.backend=local",
        "--distributor.log-received-spans.enabled",
      ]
    volumes:
      - ./config/tempo/tempo.yaml:/etc/tempo.yaml
      - tempo_backup:/var/tempo
    ports:
      - 3200:3200
    networks:
      - grafana
    depends_on:
      - tempo_init

  loki_init:
    image: &lokiImage grafana/loki:main
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/tmp/loki"
    volumes:
      - loki_backup:/tmp/loki

  loki:
    image: *lokiImage
    container_name: loki
    command:
      ["-config.file=/etc/loki/local-config.yaml", "-print-config-stderr=true"]
    volumes:
      - ./config/loki/loki.yaml:/etc/loki/local-config.yaml
      - loki_backup:/tmp/loki
    ports:
      - 3100:3100
    depends_on:
      - loki_init
    networks:
      - grafana
